<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="24.11.1.0">
<procedure name="main">
<interface/>
<body>
<l>MinConfidence := 0.5</l>
<l>MaxOverlap := 0.5</l>
<l>MaxOverlapClassAgnostic := 0.5</l>
<c></c>
<l>DLModelPath := 'E:/makeathon/code/TrashTracker/model_Training-250313-141146_opt.hdl'</l>
<l>DictPath := 'E:/makeathon/code/TrashTracker/model_Training-250313-141146_opt_dl_preprocess_params.hdict'</l>
<l>runtime := 'cpu'</l>
<l>init_detection (DLModelPath, DictPath, MinConfidence, MaxOverlap, MaxOverlapClassAgnostic, DLModelHandle, DictHandle)</l>
<c>* setup camera stream</c>
<l>init_camera (AcqHandle)</l>
<c></c>
<l>set_dl_device (DLModelHandle, runtime, DLDeviceHandles)</l>
<l>while (true)</l>
<l>    detect_objects (Image, AcqHandle, DictHandle, DLModelHandle, DLSampleInference, DLResult, JsonString)</l>
<l>endwhile</l>
<l>close_framegrabber (AcqHandle)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="init_detection">
<interface>
<ic>
<par name="DLModelPath" base_type="ctrl" dimension="0"/>
<par name="DictPath" base_type="ctrl" dimension="0"/>
<par name="MinConfidence" base_type="ctrl" dimension="0"/>
<par name="MaxOverlap" base_type="ctrl" dimension="0"/>
<par name="MaxOverlapClassAgnostic" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="DLModelHandle" base_type="ctrl" dimension="0"/>
<par name="DictHandle" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>* read model</c>
<c></c>
<l>read_dl_model (DLModelPath, DLModelHandle)</l>
<l>read_dict (DictPath, [], [], DictHandle)</l>
<c></c>
<l>set_dl_model_param (DLModelHandle, 'min_confidence', MinConfidence)</l>
<l>set_dl_model_param (DLModelHandle, 'max_overlap', MaxOverlap)</l>
<l>set_dl_model_param (DLModelHandle, 'max_overlap_class_agnostic', MaxOverlapClassAgnostic)</l>
<l>return ()</l>
</body>
<docu id="init_detection">
<parameters>
<parameter id="DLModelHandle"/>
<parameter id="DLModelPath"/>
<parameter id="DictHandle"/>
<parameter id="DictPath"/>
<parameter id="MaxOverlap"/>
<parameter id="MaxOverlapClassAgnostic"/>
<parameter id="MinConfidence"/>
</parameters>
</docu>
</procedure>
<procedure name="init_camera">
<interface>
<oc>
<par name="AcqHandle" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="2">open_framegrabber ('USB3Vision', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', '1409000BFC2F_IDSImagingDevelopmentSystemsGmbH_U33250MLCHQ', 0, -1, AcqHandle)</l>
<l>set_framegrabber_param (AcqHandle, 'ExposureTime', 80010.0)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">grab_image_start (AcqHandle, -1)</l>
<l>return ()</l>
</body>
<docu id="init_camera">
<parameters>
<parameter id="AcqHandle"/>
</parameters>
</docu>
</procedure>
<procedure name="detect_objects">
<interface>
<oo>
<par name="Image" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="AcqHandle" base_type="ctrl" dimension="0"/>
<par name="DictHandle" base_type="ctrl" dimension="0"/>
<par name="DLModelHandle" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="DLSampleInference" base_type="ctrl" dimension="0"/>
<par name="DLResult" base_type="ctrl" dimension="0"/>
<par name="JsonString" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>CamParam:=['area_scan_division', 0.00462464, -15265.5, 4.50083e-06, 4.5e-06, 773.126, 581.373, 1600, 1200]</l>
<l>Pose:=[-0.00564038, 0.0725761, 0.339958, 300.887, 357.581, 180.786, 0]</l>
<l>    grab_image_async (Image, AcqHandle, -1)</l>
<l>    *read_image (Image, ImageFilesShuffled[IndexInference])</l>
<l>    gen_dl_samples_from_images (Image, DLSampleInference)</l>
<l>    preprocess_dl_samples (DLSampleInference, DictHandle)</l>
<l>    apply_dl_model (DLModelHandle, DLSampleInference, [], DLResult)</l>
<c>    </c>
<c>    </c>
<l>    if(DLResult!=[])</l>
<l>        NumberResults:=|DLResult.bbox_row1|</l>
<l>        for I := 0 to NumberResults-1 by 1</l>
<l>           BoxCenterRow:=DLResult.bbox_row1[I]+(DLResult.bbox_row2[I]-DLResult.bbox_row1[I])/2.0</l>
<l>           BoxCenterCol:=DLResult.bbox_col1[I]+(DLResult.bbox_col2[I]-DLResult.bbox_col1[I])/2.0</l>
<l>           DLResult.BoxCenterRow[I] := BoxCenterRow</l>
<l>           DLResult.BoxCenterCol[I] := BoxCenterCol</l>
<l>           image_points_to_world_plane (CamParam, Pose, BoxCenterRow,BoxCenterCol, 'm', X, Y)</l>
<l>           DLResult.world_x[I]:=X</l>
<l>           DLResult.world_y[I]:=Y</l>
<l>       endfor</l>
<l>    endif</l>
<c></c>
<l>    dict_to_json (DLResult, [], [], JsonString)</l>
<c>    </c>
<l>return ()</l>
</body>
<docu id="detect_objects">
<parameters>
<parameter id="AcqHandle"/>
<parameter id="DLModelHandle"/>
<parameter id="DLResult"/>
<parameter id="DLSampleInference"/>
<parameter id="DictHandle"/>
<parameter id="Image"/>
<parameter id="JsonString"/>
</parameters>
</docu>
</procedure>
<procedure name="set_dl_device">
<interface>
<ic>
<par name="DLModelHandle" base_type="ctrl" dimension="0"/>
<par name="runtime" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="DLDeviceHandles" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>query_available_dl_devices (['runtime'], [runtime], DLDeviceHandles)</l>
<l>set_dl_model_param (DLModelHandle, 'device', DLDeviceHandles[0])</l>
<l>return ()</l>
</body>
<docu id="set_dl_device">
<parameters>
<parameter id="DLDeviceHandles"/>
<parameter id="DLModelHandle"/>
<parameter id="runtime"/>
</parameters>
</docu>
</procedure>
</hdevelop>
